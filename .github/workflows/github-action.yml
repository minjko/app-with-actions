name: CI/CD

on: 
  workflow_dispatch
  			
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
	uses: actions/setup-java@v4
	with:
		java-version: '17'
		distribution: 'temurin'
		cache: maven
  
      - name: Build with Maven
	run: mvn -B package --file pom.xml
		
      - name: Naming jar file
	run: mv ./target/*.jar ./target/app.jar
		
      - name: Check jar file
        run: ls ./target  

      - name: Upload jar as artifact
        uses: actions/upload-artifact@v4
        with:
	  name: app.jar
	  path: ./target/app.jar
				
			
  deploy:
    runs-on: ubuntu-latest
    steps: 
      - name: From Github Actions to AWS EC2 through SCP
        uses: appleboy/scp-action@v0.1.7 
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ./target/app.jar # scp(secure copy protocol) 사용하여 전송할 파일의 출발지
          target: /home/ubuntu/app # scp(secure copy protocol) 사용하여 전송할 파일의 목적지
      - name: Connecting EC2 through SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
	  host: ${{ secrets.EC2_HOST }}		      
	  username: ${{ secrets.EC2_USERNAME }}
	  key: ${{ secrets.EC2_PRIVATE_KEY }}
	  script_stop: true
	  script: |
		  rm -rf /home/ubuntu/app/deploy
		  mkdir /home/ubuntu/app/deploy
		  mv /home/ubuntu/app/app.jar /home/ubuntu/app/deploy/app.jar
		  cd /home/ubuntu/app/deploy
		  sudo fuser -k -n tcp 8080 || true
		  nohup java -jar app.jar > ./output.log 2>&1 &
		  rm -rf /home/ubuntu/app
